
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'COMMENTARY HEADER LONG_CASTLE MOVE SHORT_CASTLE TURN TURN_RECOVERY VICTORYlog : gamegame : descriptor play gamegame : emptydescriptor : HEADER descriptordescriptor : emptyplay : turn playplay : empty resultplay : ending_turn resultturn : TURN move_p1 com_p1 move_p2 com_p2ending_turn : TURN move_p1 com_p1_finalcom_p1_final : commentary\n                        | emptycom_p1 : commentary TURN_RECOVERYcom_p1 : empty\n           com_p2 : commentarycom_p2 : empty\n           commentary : COMMENTARYmove_p1 : MOVE\n                   | LONG_CASTLE\n                   | SHORT_CASTLEmove_p2 : MOVE\n                   | LONG_CASTLE\n                   | SHORT_CASTLEresult : VICTORYempty :'
    
_lr_action_items = {'HEADER':([0,5,6,14,15,16,17,],[5,5,5,-6,-7,-24,-8,]),'$end':([0,1,2,4,6,13,14,15,16,17,],[-25,0,-1,-3,-25,-2,-6,-7,-24,-8,]),'TURN':([0,3,4,5,6,7,11,12,14,15,16,17,26,27,28,29,30,32,33,34,],[-25,10,-5,-25,-25,10,-4,-5,-6,-7,-24,-8,-17,-25,-21,-22,-23,-9,-15,-16,]),'VICTORY':([0,3,4,5,6,7,8,9,11,12,14,15,16,17,18,19,20,21,23,24,25,26,27,28,29,30,32,33,34,],[-25,-25,-5,-25,-25,-25,16,16,-4,-5,-6,-7,-24,-8,-25,-18,-19,-20,-10,-11,-12,-17,-25,-21,-22,-23,-9,-15,-16,]),'MOVE':([10,18,19,20,21,22,25,31,],[19,-25,-18,-19,-20,28,-14,-13,]),'LONG_CASTLE':([10,18,19,20,21,22,25,31,],[20,-25,-18,-19,-20,29,-14,-13,]),'SHORT_CASTLE':([10,18,19,20,21,22,25,31,],[21,-25,-18,-19,-20,30,-14,-13,]),'COMMENTARY':([18,19,20,21,27,28,29,30,],[26,-18,-19,-20,26,-21,-22,-23,]),'TURN_RECOVERY':([24,26,],[31,-17,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'log':([0,],[1,]),'game':([0,6,],[2,13,]),'descriptor':([0,5,6,],[3,11,3,]),'empty':([0,3,5,6,7,18,27,],[4,8,12,4,8,25,34,]),'play':([3,7,],[6,14,]),'turn':([3,7,],[7,7,]),'ending_turn':([3,7,],[9,9,]),'result':([8,9,],[15,17,]),'move_p1':([10,],[18,]),'com_p1':([18,],[22,]),'com_p1_final':([18,],[23,]),'commentary':([18,27,],[24,33,]),'move_p2':([22,],[27,]),'com_p2':([27,],[32,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> log","S'",1,None,None,None),
  ('log -> game','log',1,'p_log','parser.py',63),
  ('game -> descriptor play game','game',3,'p_game','parser.py',68),
  ('game -> empty','game',1,'p_game_empty','parser.py',73),
  ('descriptor -> HEADER descriptor','descriptor',2,'p_descriptor','parser.py',78),
  ('descriptor -> empty','descriptor',1,'p_descriptor_empty','parser.py',88),
  ('play -> turn play','play',2,'p_play','parser.py',93),
  ('play -> empty result','play',2,'p_play_empty','parser.py',98),
  ('play -> ending_turn result','play',2,'p_play_final','parser.py',103),
  ('turn -> TURN move_p1 com_p1 move_p2 com_p2','turn',5,'p_turn','parser.py',108),
  ('ending_turn -> TURN move_p1 com_p1_final','ending_turn',3,'p_ending_turn','parser.py',119),
  ('com_p1_final -> commentary','com_p1_final',1,'p_com_p1_final','parser.py',124),
  ('com_p1_final -> empty','com_p1_final',1,'p_com_p1_final','parser.py',125),
  ('com_p1 -> commentary TURN_RECOVERY','com_p1',2,'p_com_p1','parser.py',130),
  ('com_p1 -> empty','com_p1',1,'p_com_p1_empty','parser.py',141),
  ('com_p2 -> commentary','com_p2',1,'p_com_p2','parser.py',147),
  ('com_p2 -> empty','com_p2',1,'p_com_p2_empty','parser.py',152),
  ('commentary -> COMMENTARY','commentary',1,'p_commentary','parser.py',158),
  ('move_p1 -> MOVE','move_p1',1,'p_move_p1','parser.py',163),
  ('move_p1 -> LONG_CASTLE','move_p1',1,'p_move_p1','parser.py',164),
  ('move_p1 -> SHORT_CASTLE','move_p1',1,'p_move_p1','parser.py',165),
  ('move_p2 -> MOVE','move_p2',1,'p_move_p2','parser.py',180),
  ('move_p2 -> LONG_CASTLE','move_p2',1,'p_move_p2','parser.py',181),
  ('move_p2 -> SHORT_CASTLE','move_p2',1,'p_move_p2','parser.py',182),
  ('result -> VICTORY','result',1,'p_result','parser.py',197),
  ('empty -> <empty>','empty',0,'p_empty','parser.py',210),
]
